plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
}

android {
    namespace 'com.example.ground_station'
    compileSdk 34

    buildFeatures {
        buildConfig = true
    }

    defaultConfig {
        applicationId "com.example.ground_station"
        minSdk 24
        targetSdk 34
        versionCode 10
        versionName "2.11.0.1"

        externalNativeBuild {
            ndkBuild {
                def gstRoot

                if (project.hasProperty('gstAndroidRoot'))
                    gstRoot = project.gstAndroidRoot
                else
                    gstRoot = System.env.GSTREAMER_ROOT_ANDROID

                if (gstRoot == null)
                    throw new GradleException('GSTREAMER_ROOT_ANDROID must be set, or "gstAndroidRoot" must be defined in your gradle.properties in the top level directory of the unpacked universal GStreamer Android binaries')

                arguments "NDK_APPLICATION_MK=jni/Application.mk", "GSTREAMER_JAVA_SRC_DIR=src", "GSTREAMER_ROOT_ANDROID=$gstRoot", "GSTREAMER_ASSETS_DIR=src/assets"

                targets "ground-station"

                // All archs except MIPS and MIPS64 are supported
                abiFilters  'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword 'abc=123'
            storeFile file("${projectDir}/keystore")
            storePassword 'abc=123'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean","DEBUG1","false"

            sourceSets {
                main {
                    manifest.srcFile 'AndroidManifest.xml'
                    java.srcDirs = ['src']
                    resources.srcDirs = ['src']
                    aidl.srcDirs = ['src']
                    renderscript.srcDirs = ['src']
                    res.srcDirs = ['res']
                    assets.srcDirs = ['assets']
                }
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean","DEBUG1","true"

            sourceSets {
                main {
                    manifest.srcFile 'AndroidManifest.xml'
                    java.srcDirs = ['src']
                    resources.srcDirs = ['src']
                    aidl.srcDirs = ['src']
                    renderscript.srcDirs = ['src']
                    res.srcDirs = ['res']
                    assets.srcDirs = ['assets']
                }
            }
        }
    }

    flavorDimensions 'gs'
    productFlavors {
        All {
            dimension "gs"
            applicationId "com.gs.ai"
            resValue "string", "app_name", "Ai Payload"
            manifestPlaceholders = [
                    package_name: "com.gs.ai"
            ]
        }
        HanHuaQi {
            dimension "gs"
            applicationId "com.gs.media"
            resValue "string", "app_name", "喊话器"
            manifestPlaceholders = [
                    package_name: "com.gs.media"
            ]
        }
        SuoJiang {
            dimension "gs"
            applicationId "com.gs.descent"
            resValue "string", "app_name", "索降器"
            manifestPlaceholders = [
                    package_name: "com.gs.descent"
            ]
        }
        Light {
            dimension "gs"
            applicationId "com.gs.light"
            resValue "string", "app_name", "探照灯"
            manifestPlaceholders = [
                    package_name: "com.gs.light"
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

//    externalNativeBuild {
//        ndkBuild {
//            path 'jni/Android.mk'
//        }
//    }

//    ndkVersion '26.1.10909125'
    ndkVersion '25.2.9519653'

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.core.ktx

    implementation libs.room.runtime
    annotationProcessor libs.room.compiler

    implementation "com.squareup.okio:okio:2.9.0"
    implementation files('libs/AIKit.aar')
//    implementation files('libs/sardine-android-debug.aar')
    implementation("com.github.thegrizzlylabs:sardine-android:0.9")
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "com.github.princekin-f:EasyFloat:2.0.4"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.jcraft:jsch:0.1.55'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.68'
    implementation 'com.blankj:utilcodex:1.31.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation("io.github.cymchad:BaseRecyclerViewAdapterHelper:3.0.14")
    implementation("com.squareup.okhttp3:okhttp:4.9.0")

//    implementation "com.github.recruit-lifestyle:FloatingView:2.4.4"
}